-- compatible_mode
SET IVORYSQL.COMPATIBLE_MODE TO ORACLE;
SHOW IVORYSQL.COMPATIBLE_MODE;

SET IVORYSQL.IDENTIFIER_CASE_SWITCH = INTERCHANGE;
SHOW IVORYSQL.IDENTIFIER_CASE_SWITCH;

-- create a procedure
CREATE TABLE TB_TODEL(ID INT);
CREATE OR REPLACE PROCEDURE PROC_DEL_TB(I INT) IS
BEGIN
	DROP TABLE TB_TODEL;
END;
/

-- create a function with security definer
CREATE OR REPLACE FUNCTION FUNC_AUTHID(P VARCHAR2)
RETURN INT DETERMINISTIC IS
BEGIN
	RETURN 123;
END;
/
-- select ... from all_procedures
SELECT OBJECT_NAME, OBJECT_TYPE, DETERMINISTIC, PARALLEL, AUTHID
FROM ALL_PROCEDURES
WHERE OBJECT_NAME = 'PROC_DEL_TB' OR OBJECT_NAME = 'FUNC_AUTHID';

-- create a function with all-lowercase name
CREATE OR REPLACE FUNCTION "func_quotes_lower"(ID INT)
RETURN VARCHAR2 IS
BEGIN
	RETURN 'func_quotes_lower'::VARCHAR2;
END;
/
-- select ... from all_source
SELECT NAME, LINE, TEXT FROM ALL_SOURCE WHERE NAME = 'func_quotes_lower';

-- data_type and pls_type in all_arguments
CREATE OR REPLACE FUNCTION FUNC_22_ARG_TYPES
(
	T1 CHAR, T2 NCHAR, T3 VARCHAR2, T4 INTEGER, T5 NUMBER, T6 NUMERIC,
	T7 BINARY_FLOAT, T8 BINARY_DOUBLE, T9 REAL, T10 FLOAT, T11 DOUBLE PRECISION,
	T12 DATE, T13 TIMESTAMP, T14 TIMESTAMP WITH TIME ZONE,
	T15 TIMESTAMP WITH LOCAL TIME ZONE,
	T16 CLOB, T17 BLOB, T18 NCLOB, T19 LONG, T20 LONG RAW, T21 BOOLEAN
)
RETURN RAW IS
BEGIN
	RETURN CAST('FUNC_22_ARG_TYPES' AS RAW);
END;
/

-- select ... from all_arguments
SELECT
	ARGUMENT_NAME || ',' || POSITION || ',' || SEQUENCE || ',' || 
	IN_OUT || ',' || DATA_TYPE || ',' || PLS_TYPE
FROM ALL_ARGUMENTS WHERE OBJECT_NAME = 'FUNC_22_ARG_TYPES'
ORDER BY OBJECT_ID, POSITION;

-- clean data
DROP TABLE IF EXISTS TB_TODEL;
DROP PROCEDURE IF EXISTS PROC_DEL_TB;
DROP FUNCTION IF EXISTS FUNC_AUTHID;
DROP FUNCTION IF EXISTS "func_quotes_lower";
DROP FUNCTION IF EXISTS FUNC_22_ARG_TYPES;


-- create a function with arguments defaulted
CREATE OR REPLACE FUNCTION FUNC_WITH_DEFAULT
(
	ARG1 IN INT DEFAULT 10,
	ARG2 OUT INT,
	ARG3 IN OUT INT DEFAULT 20,
	ARG4 IN VARCHAR2(10) DEFAULT NULL
)
RETURN RECORD IS
BEGIN
	ARG2 := ARG1 + 10;
	ARG3 := ARG1 / 2;
END;
/
-- check arguments with default value
SELECT ARGUMENT_NAME, IN_OUT, POSITION, DEFAULTED FROM ALL_ARGUMENTS
WHERE OBJECT_NAME = 'FUNC_WITH_DEFAULT';
-- clean data
DROP FUNCTION IF EXISTS FUNC_WITH_DEFAULT;



-- create user u1 and grant it privilege to create schema
CREATE USER U1;
GRANT ALL ON DATABASE CONTRIB_REGRESSION TO U1;
-- create user u2 and grant it privilege to create schema
CREATE USER U2;
GRANT ALL ON DATABASE CONTRIB_REGRESSION TO U2;
-- create schema sv_s1 owned by u1
\c - u1
CREATE SCHEMA SV_S1;
-- create schema sv_s2 owned by u2
\c - u2
CREATE SCHEMA SV_S2;
-- create functions public.f1 and sv_s1.f1 owned by u1
\c - u1
CREATE OR REPLACE FUNCTION F1(I INT)
RETURN INT IS BEGIN RETURN $1; END;
/
CREATE OR REPLACE FUNCTION SV_S1.F1(I INT)
RETURN INT IS BEGIN RETURN $1; END;
/
-- create functions public.f2 and sv_s2.f2 owned by u2
\c - u2
CREATE OR REPLACE FUNCTION F2(I INT)
RETURN INT IS BEGIN RETURN $1; END;
/
CREATE OR REPLACE FUNCTION SV_S2.F2(I INT)
RETURN INT IS BEGIN RETURN $1; END;
/
-- select with u1
\c - u1
SET IVORYSQL.IDENTIFIER_CASE_SWITCH = INTERCHANGE;
SHOW IVORYSQL.IDENTIFIER_CASE_SWITCH;
-- f1, sv_s1.f1, f2
SELECT OID::REGPROC, OBJECT_NAME
FROM ALL_PROCEDURES LEFT JOIN PG_PROC ON OID = OBJECT_ID
WHERE OBJECT_NAME='F1' OR OBJECT_NAME='F2';
-- grant schema's usage privilege to u1
\c - u2
GRANT USAGE ON SCHEMA SV_S2 TO U1;
-- select with u1 again
\c - u1
SET IVORYSQL.IDENTIFIER_CASE_SWITCH = INTERCHANGE;
SHOW IVORYSQL.IDENTIFIER_CASE_SWITCH;
-- f1, sv_s1.f1, f2, sv_s2.f2
SELECT OID::REGPROC, OBJECT_NAME
FROM ALL_PROCEDURES LEFT JOIN PG_PROC ON OID = OBJECT_ID
WHERE OBJECT_NAME='F1' OR OBJECT_NAME='F2';

